// ================================================================================================================================================================================================================================================================================================================================
// CONNECTING FONTS \\
@mixin font($fontName, $fileName, $weight, $style) {
  @font-face {
    font-family: $fontName;
    font-display: swap;
    src: url('../fonts/#{$fileName}.woff') format('woff'),
      url('../fonts/#{$fileName}.woff2') format('woff2');
    font-weight: #{$weight};
    font-style: #{$style};
  }
}
// CONNECTING FONTS \\
// ================================================================================================================================================================================================================================================================================================================================
// ADAPTIVE FONT \\
@mixin adaptiveFont($pcSize, $mobSize, $lhSize: $pcSize) {
  $addSize: $pcSize - $mobSize;
  $maxWidth: $maxWidthContainer - $minWidthBody;
  font-size: calc(
    #{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer})
  );
  line-height: calc(#{$lhSize} / #{$pcSize} * 100%);
}
// ADAPTIVE FONT \\
// ================================================================================================================================================================================================================================================================================================================================
// ADAPTIVE PROPERTY \\
@mixin adaptiveProperty($property, $pcSize, $mobSize, $type) {
  $addSize: $pcSize - $mobSize;
  @if $type == 'max' {
    #{$property}: $pcSize + px;
    @media (max-width: #{$maxWidthContainer + 30px}) {
      #{$property}: calc(
        #{$mobSize + px} + #{$addSize} *
          ((100vw - $minWidthBody + px) / #{$maxWidthContainer - $minWidthBody})
      );
    }
  } @else if $type == 'min' {
    #{$property}: $pcSize + px;
    @media (min-width: $maxWidthContainer - 30px) {
      #{$property}: calc(
        #{$mobSize + px} + #{$addSize} *
          ((100vw - $minWidthBody) / #{$maxWidthLayout - $minWidthBody})
      );
    }
  } @else {
    #{$property}: calc(
      #{$mobSize + px} + #{$addSize} * ((100vw - $minWidthBody) / #{$maxWidthLayout - $minWidthBody})
    );
  }
}
// ADAPTIVE PROPERTY \\
// ================================================================================================================================================================================================================================================================================================================================
